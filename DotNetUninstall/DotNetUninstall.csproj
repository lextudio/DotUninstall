<Project Sdk="Uno.Sdk">
  <PropertyGroup>
    <TargetFramework>net9.0-desktop</TargetFramework>

    <OutputType>Exe</OutputType>
    <UnoSingleProject>true</UnoSingleProject>

    <!-- Display name -->
    <ApplicationTitle>DotNet Uninstall Tool UI</ApplicationTitle>
    <!-- App Identifier -->
    <ApplicationId>com.lextudio.dotnetuninstallui</ApplicationId>
    <!-- Versions -->
    <ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
    <ApplicationVersion>1</ApplicationVersion>
    <!-- Package Publisher -->
    <ApplicationPublisher>lextudio</ApplicationPublisher>
    <!-- Package Description -->
    <Description>UI for Microsoft's dotnet-core-uninstall utility powered by Uno Platform.</Description>
  <!-- Windows executable icon (generated via scripts/generate-icons.ps1) -->
  <ApplicationIcon Condition="Exists('Assets/Images/app.ico')">Assets/Images/app.ico</ApplicationIcon>

    <!--
      UnoFeatures let's you quickly add and manage implicit package references based on the features you want to use.
      https://aka.platform.uno/singleproject-features
    -->
    <UnoFeatures>
      Lottie;
      Hosting;
      Toolkit;
      Logging;
      LoggingSerilog;
      Mvvm;
      Configuration;
      Localization;
      Navigation;
      ThemeService;
      SkiaRenderer;
    </UnoFeatures>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="NuGet.Versioning" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Tooling\UninstallTooling.csproj" />
  </ItemGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Debug' or '$(IsUiAutomationMappingEnabled)'=='True'">
    <IsUiAutomationMappingEnabled>True</IsUiAutomationMappingEnabled>
    <DefineConstants>$(DefineConstants);USE_UITESTS</DefineConstants>
  </PropertyGroup>

</Project>
