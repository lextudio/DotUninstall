<Project Sdk="Uno.Sdk">
  <PropertyGroup>
    <TargetFramework>net9.0-desktop</TargetFramework>

    <OutputType>Exe</OutputType>
    <OutputType Condition=" '$(RuntimeIdentifier)' != '' and $(RuntimeIdentifier.StartsWith('win-')) ">WinExe</OutputType>
    <UnoSingleProject>true</UnoSingleProject>

    <!-- Display name -->
    <ApplicationTitle>DotUninstall</ApplicationTitle>
    <!-- App Identifier -->
    <ApplicationId>com.lextudio.dotuninstall</ApplicationId>
    <!-- Version mapping: Display = Major.Minor ; Internal numeric = Major -->
    <ApplicationDisplayVersion Condition=" '$(ApplicationDisplayVersion)' == '' and '$(VersionMajor)' != '' and '$(VersionMinor)' != '' ">$(VersionMajor).$(VersionMinor)</ApplicationDisplayVersion>
    <ApplicationDisplayVersion Condition=" '$(ApplicationDisplayVersion)' == '' ">1.0</ApplicationDisplayVersion>
    <ApplicationVersion Condition=" '$(ApplicationVersion)' == '' and '$(VersionMajor)' != '' ">$(VersionMajor)</ApplicationVersion>
    <!-- keep ApplicationVersion numeric (major.minor.patch -> convert to a numeric build, fallback 1) -->
    <ApplicationVersion Condition=" '$(ApplicationVersion)' == '' ">1</ApplicationVersion>
    <!-- Package Publisher -->
    <ApplicationPublisher>lextudio</ApplicationPublisher>
    <!-- Package Description -->
    <Description>UI for Microsoft's dotnet-core-uninstall utility powered by Uno Platform.</Description>
    <!-- Windows executable icon (generated via scripts/generate-icons.ps1) -->
    <ApplicationIcon Condition="Exists('Assets/Images/app.ico')">Assets/Images/app.ico</ApplicationIcon>

    <!--
      UnoFeatures let's you quickly add and manage implicit package references based on the features you want to use.
      https://aka.platform.uno/singleproject-features
    -->
    <UnoFeatures>
      Lottie;
      Hosting;
      Toolkit;
      Logging;
      LoggingSerilog;
      Mvvm;
      Configuration;
      Localization;
      Navigation;
      ThemeService;
      SkiaRenderer;
    </UnoFeatures>
    <!-- Expose full semantic version (Major.Minor.Patch) for runtime comparison.
      Nerdbank.GitVersioning supplies VersionMajor/Minor/Patch. Fallback to .0 patch if absent. -->
    <AssemblyInformationalVersion Condition="'$(AssemblyInformationalVersion)' == '' and '$(VersionPatch)' != ''">$(VersionMajor).$(VersionMinor).$(VersionPatch)</AssemblyInformationalVersion>
    <AssemblyInformationalVersion Condition="'$(AssemblyInformationalVersion)' == ''">$(VersionMajor).$(VersionMinor).0</AssemblyInformationalVersion>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="NuGet.Versioning" />
    <PackageReference Include="Mono.Posix" />
    <PackageReference Include="Nerdbank.GitVersioning" PrivateAssets="all" />
    <PackageReference Include="Octokit" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Tooling\UninstallTooling.csproj" />
  </ItemGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Debug' or '$(IsUiAutomationMappingEnabled)'=='True'">
    <IsUiAutomationMappingEnabled>True</IsUiAutomationMappingEnabled>
    <DefineConstants>$(DefineConstants);USE_UITESTS</DefineConstants>
  </PropertyGroup>

</Project>
